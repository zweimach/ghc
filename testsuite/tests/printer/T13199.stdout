T13199.hs:(14,2)-(15,7): Splicing declarations
    [d| instance C (Maybe a) (Maybe b) c |]
  ======>
    instance C (Maybe a) (Maybe b) c
T13199.hs:21:2-45: Splicing declarations
    [d| g (a :: (Int -> Int) -> Int) = True |]
  ======>
    g (a :: (Int -> Int) -> Int) = True
T13199.hs:24:2-28: Splicing declarations
    [d| h (id -> x) = True |] ======> h (id -> x) = True
T13199.hs:27:2-38: Splicing declarations
    [d| f (Just (Just False)) = True |]
  ======>
    f (Just (Just False)) = True
T13199.hs:30:2-34: Splicing declarations
    [d| i (B (a `B` c) d) = True |] ======> i (B (a `B` c) d) = True
T13199.hs:33:2-30: Splicing declarations
    [d| j B {aa = a} = True |] ======> j B {aa = a} = True
T13199.hs:36:2-29: Splicing declarations
    [d| k = id @(Maybe Int) |] ======> k = id @(Maybe Int)
T13199.hs:38:2-59: Splicing declarations
    [d| l = case Just 'a' of Just a -> Just ((\ x -> x) a) |]
  ======>
    l = case Just 'a' of Just a -> Just ((\ x -> x) a)
T13199.ppr.hs:11:2-42: Splicing declarations
    [d| instance C (Maybe a) (Maybe b) c |]
  ======>
    instance C (Maybe a) (Maybe b) c
T13199.ppr.hs:12:2-45: Splicing declarations
    [d| g (a :: (Int -> Int) -> Int) = True |]
  ======>
    g (a :: (Int -> Int) -> Int) = True
T13199.ppr.hs:13:2-28: Splicing declarations
    [d| h (id -> x) = True |] ======> h (id -> x) = True
T13199.ppr.hs:14:2-38: Splicing declarations
    [d| f (Just (Just False)) = True |]
  ======>
    f (Just (Just False)) = True
T13199.ppr.hs:15:2-34: Splicing declarations
    [d| i (B (a `B` c) d) = True |] ======> i (B (a `B` c) d) = True
T13199.ppr.hs:16:2-29: Splicing declarations
    [d| j B {aa = a} = True |] ======> j B {aa = a} = True
T13199.ppr.hs:17:2-29: Splicing declarations
    [d| k = id @(Maybe Int) |] ======> k = id @(Maybe Int)
T13199.ppr.hs:18:2-60: Splicing declarations
    [d| l = case Just 'a' of Just a -> Just ((\ x -> x) a) |]
  ======>
    l = case Just 'a' of Just a -> Just ((\ x -> x) a)
